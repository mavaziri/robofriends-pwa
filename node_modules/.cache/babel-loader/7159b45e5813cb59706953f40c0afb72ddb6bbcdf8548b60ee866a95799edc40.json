{"ast":null,"code":"var _jsxFileName = \"/Users/mohammad/Projects/robofriends-redux/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport \"./App.css\";\nimport { setSearchField, requestRobots } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      robots,\n      isPending\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          robots: filteredRobots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","jsxDEV","_jsxDEV","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","searchChange"],"sources":["/Users/mohammad/Projects/robofriends-redux/src/containers/App.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport \"./App.css\";\r\nimport { setSearchField, requestRobots } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n  render() {\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n\r\n    const filteredRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return isPending ? (\r\n      <h1>Loading</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,WAAW;AAClB,SAASC,cAAc,EAAEC,aAAa,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLC,WAAW,EAAED,KAAK,CAACE,YAAY,CAACD,WAAW;IAC3CE,MAAM,EAAEH,KAAK,CAACJ,aAAa,CAACO,MAAM;IAClCC,SAAS,EAAEJ,KAAK,CAACJ,aAAa,CAACQ,SAAS;IACxCC,KAAK,EAAEL,KAAK,CAACJ,aAAa,CAACS;EAC7B,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLC,cAAc,EAAGC,KAAK,IAAKF,QAAQ,CAACZ,cAAc,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;IACvEC,eAAe,EAAEA,CAAA,KAAML,QAAQ,CAACX,aAAa,CAAC,CAAC;EACjD,CAAC;AACH,CAAC;AAED,MAAMiB,GAAG,SAASvB,SAAS,CAAC;EAC1BwB,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,KAAK,CAACH,eAAe,CAAC,CAAC;EAC9B;EAEAI,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEf,WAAW;MAAEO,cAAc;MAAEL,MAAM;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACW,KAAK;IAErE,MAAME,cAAc,GAAGd,MAAM,CAACe,MAAM,CAAEC,KAAK,IAAK;MAC9C,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,WAAW,CAACoB,WAAW,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC;IAEF,OAAOjB,SAAS,gBACdN,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEhB7B,OAAA;MAAK8B,SAAS,EAAC,IAAI;MAAAL,QAAA,gBACjBzB,OAAA,CAACL,SAAS;QAACoC,YAAY,EAAErB;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3C7B,OAAA,CAACJ,MAAM;QAAA6B,QAAA,eACLzB,OAAA,CAACN,QAAQ;UAACW,MAAM,EAAEc;QAAe;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EACH;AACF;AAEA,eAAepC,OAAO,CAACQ,eAAe,EAAEO,kBAAkB,CAAC,CAACO,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}