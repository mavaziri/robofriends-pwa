{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialStateSearch = {\n  searchField: \"\"\n};\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n    //or\n    //   return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\"\n};\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","searchRobots","state","action","type","Object","assign","payload","initialStateRobots","isPending","robots","error","requestRobots"],"sources":["/Users/mohammad/Projects/robofriends-redux/src/reducers.js"],"sourcesContent":["import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return Object.assign({}, state, { searchField: action.payload });\r\n    //or\r\n    //   return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return Object.assign({}, state, { isPending: true });\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        robots: action.payload,\r\n        isPending: false,\r\n      });\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return Object.assign({}, state, {\r\n        error: action.payload,\r\n        isPending: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,mBAAmB,EACnBC,sBAAsB,EACtBC,sBAAsB,EACtBC,qBAAqB,QAChB,aAAa;AAEpB,MAAMC,kBAAkB,GAAG;EACzBC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGH,kBAAkB,EAAEI,MAAM,GAAG,CAAC,CAAC,KAAK;EACvE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,mBAAmB;MACtB,OAAOU,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;QAAEF,WAAW,EAAEG,MAAM,CAACI;MAAQ,CAAC,CAAC;IAClE;IACA;IACA;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMM,kBAAkB,GAAG;EACzBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAACV,KAAK,GAAGM,kBAAkB,EAAEL,MAAM,GAAG,CAAC,CAAC,KAAK;EACxE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,sBAAsB;MACzB,OAAOS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;QAAEO,SAAS,EAAE;MAAK,CAAC,CAAC;IACtD,KAAKZ,sBAAsB;MACzB,OAAOQ,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;QAC9BQ,MAAM,EAAEP,MAAM,CAACI,OAAO;QACtBE,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,KAAKX,qBAAqB;MACxB,OAAOO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,KAAK,EAAE;QAC9BS,KAAK,EAAER,MAAM,CAACI,OAAO;QACrBE,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;MACE,OAAOP,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}